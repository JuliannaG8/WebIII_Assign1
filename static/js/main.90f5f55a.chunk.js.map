{"version":3,"sources":["Components/PlayRow.js","Components/PlayTable.js","Components/PlayList.js","Components/PlayFilter.js","Components/Header.js","Components/FavItem.js","Components/Favourites.js","Components/DefaultView.js","Hooks/useLocalStorage.js","Components/HomeView.js","Components/PlayTitle.js","Components/Tabs.js","Components/Tab.js","Components/PlayDetails.js","App.js","reportWebVitals.js","index.js"],"names":["PlayRow","props","to","pathname","play","id","state","title","likelyDate","onClick","addFav","PlayTable","sort","plays","map","p","PlayList","search","filteredPlays","filter","toLowerCase","includes","length","PlayFilter","before","createRef","beforeYear","after","afterYear","genre","onSubmit","e","preventDefault","filters","current","checked","value","Object","keys","alert","onReset","reset","name","ref","type","genres","g","Header","useState","modalIsOpen","changeModel","handleModel","className","size","color","isOpen","ariaHideApp","style","href","FavItem","remove","Favourites","visible","toggle","display","favourites","f","DefaultView","location","useLocation","locationState","changeLocationState","fromHomeView","favouritesVisibility","editFavouritesVisibility","playlist","favs","removeFav","Set","restore","useLocalStorage","key","defaultValue","JSON","parse","localStorage","getItem","getStorageValue","setValue","useEffect","setItem","stringify","HomeView","filteredData","setFilteredData","wordEntered","setWordEntered","placeholder","onChange","searchSong","target","newFilter","songs","PlayTitle","handleClick","params","acts","a","scenes","sc","speakers","sp","synopsis","Tabs","tabName","details","wiki","gutenberg","shakespeareOrg","desc","player","act","speeches","speaker","lines","l","Tab","setPlay","isFetching","stopFetching","buttons","changeButtons","tabProps","changeTabProps","checkButtons","filename","url","fetch","then","resp","ok","json","Error","data","catch","error","console","handleTabChange","innerHTML","tabState","persona","char","forEach","push","s","height","width","b","PlayDetails","useParams","currentTab","changeCurrentTab","searchParams","editSearchParams","setupSearch","tab","App","fullPlaysList","setFullPlaysList","updatePlays","editFavourites","response","addFavourite","find","favouritesCopy","cloneDeep","path","exact","filterTitleGenre","titleString","filterPlaysByTitleGenre","filterByDate","filterPlaysByDate","sortBy","sortedPlays","textContent","favToDelete","findIndex","splice","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90f5f55a.chunk.js","sourcesContent":["import {GiChainedHeart} from \"react-icons/gi\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst PlayRow=props=>{\r\n\r\n    const handleClick=()=>{\r\n        props.addFav(props.play);\r\n    }\r\n    return(\r\n        <tr>\r\n            <Link to= {{\r\n                pathname: `/${props.play.id}/details`,\r\n                state: {\r\n                    play: props.play\r\n                }\r\n            }}><td>{props.play.title}</td></Link>\r\n            <td>{props.play.likelyDate}</td>\r\n            <td><button onClick={handleClick}><GiChainedHeart/></button></td>\r\n            <td>\r\n                <Link to= {{\r\n                    pathname: `/${props.play.id}/details`,\r\n                    state: {\r\n                        play: props.play\r\n                    }\r\n                }}>\r\n                <button>View</button>\r\n                </Link>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\nexport default PlayRow;\r\n","import PlayRow from \"./PlayRow\";\r\nconst PlayTable=props=>{\r\n    return(\r\n        <table>\r\n            <tbody>\r\n            <tr>\r\n                <th onClick={props.sort}>Title</th>\r\n                <th onClick={props.sort}>Year</th>\r\n            </tr>\r\n            {props.plays.map(p=><PlayRow play={p} key={p.id} addFav={props.addFav}/>)}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\nexport default PlayTable;\r\n","import PlayTable from \"./PlayTable\";\r\nconst PlayList = props =>{\r\n    if (typeof props.search === \"string\"){\r\n        const filteredPlays = props.plays.filter(p=> p.title.toLowerCase().includes(props.search.toLowerCase()))\r\n        return(\r\n            <span>\r\n                <h2>List/Matches</h2>\r\n                <PlayTable plays={filteredPlays} sort={props.sort} addFav={props.addFav}/>\r\n            </span>\r\n        )\r\n    } else if(props.plays.length === 0){\r\n        return (\r\n            <span>\r\n                <h2>List/Matches</h2>\r\n                <p>No Plays match given parameters</p>\r\n            </span>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <span>\r\n                <h2>List/Matches</h2>\r\n                <PlayTable plays={props.plays} sort={props.sort} addFav={props.addFav}/>\r\n            </span>\r\n        )\r\n    }\r\n}\r\nexport default PlayList;\r\n","import {createRef} from \"react\";\r\nimport './DefaultView.css';\r\n\r\nconst PlayFilter=props=>{\r\n    //creating references for form fields\r\n    const before = createRef();\r\n    const beforeYear = createRef();\r\n    const after = createRef();\r\n    const afterYear = createRef();\r\n    const title = createRef();\r\n    const genre = createRef();\r\n\r\n    const handleSubmit =(e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        const filters = {};\r\n        //only adds inputted parameters\r\n        if (before.current.checked && beforeYear.current.value.length > 0) filters.before = beforeYear.current.value;\r\n        if (after.current.checked && afterYear.current.value.length > 0) filters.after = afterYear.current.value;\r\n        if (title.current.value.length > 0) filters.title = title.current.value;\r\n        if (genre.current.value.length > 0) filters.genre = genre.current.value;\r\n        //if no parameters are given, sends an alert,\r\n        //otherwise calls passed filter function\r\n        if (Object.keys(filters).length === 0)\r\n            alert(\"Error: please input some filter parameters\")\r\n        else {\r\n            props.filter(filters);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={handleSubmit} onReset={props.reset}>\r\n            <h2>Filters</h2>\r\n            <div>\r\n                <p><label>Title</label></p>\r\n            <input name=\"title\" ref={title} type='text'/>\r\n            </div>\r\n            <div>\r\n                <p><label>Year</label></p>\r\n                <p><input name=\"before\" ref={before} type='radio'/>Before <input type=\"number\" ref={beforeYear} name=\"beforeYear\"/></p>\r\n                <p><input name=\"after\" ref={after} type='radio'/>After <input type='number' ref={afterYear} name=\"afterYear\"/></p>\r\n            </div>\r\n            <div>\r\n                <p><label>Genre</label></p>\r\n                <select ref={genre} name=\"genre\">\r\n                    <option/>\r\n                    {props.genres.map(g=><option value={g} key={g}>{g}</option>)}\r\n                </select>\r\n            </div>\r\n            <br></br>\r\n            <button type=\"submit\" value=\"Filter\">Filter</button>\r\n            <button type=\"reset\" value=\"Clear\">Clear</button>\r\n        </form>\r\n    )\r\n\r\n}\r\nexport default PlayFilter;\r\n","import {GiTheaterCurtains} from \"react-icons/gi\";\r\nimport ReactModal from \"react-modal\";\r\nimport {useState} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nconst Header = ()=>{\r\n    //state used to determine whether the modal box should be displayed\r\n    const [modalIsOpen, changeModel] = useState(false);\r\n    //handler for opening and closing the modal box\r\n    const handleModel=()=>{\r\n        if(modalIsOpen)\r\n            changeModel(false);\r\n        else\r\n            changeModel(true);\r\n    }\r\n    return(\r\n        <div className='header'>\r\n          <span><Link to=\"/HomeView\"><GiTheaterCurtains size=\"3em\" color=\"red\"/></Link></span>\r\n          <button onClick={handleModel}>About</button>\r\n          <ReactModal isOpen={modalIsOpen} ariaHideApp={true}>\r\n          <p style={{ color: 'black' }}>Julianna and Justin</p>\r\n              <p style={{ color: 'black' }}><a href=\"https://github.com/JuliannaG8/WebIII_Assign1\">Github</a></p>\r\n              <h5 style={{ color: 'black' }}>Technologies/Third-party Sources:</h5>\r\n              <ul>\r\n                  {/*Add any other technologies or third-party code sources/inspiration here*/}\r\n                  <li style={{ color: 'black' }}>React-icons</li>\r\n                  <li style={{ color: 'black' }}>React-modal</li>\r\n                  <li style={{ color: 'black' }}>React-loader-spinner</li>\r\n                  <li style={{ color: 'black' }}>Lodash</li>\r\n                  <li style={{ color: 'black' }}><a href=\"https://blog.logrocket.com/using-localstorage-react-hooks/\">Local Storage logic inspiration</a></li>\r\n                  <li style={{ color: 'black' }}><a href=\"https://www.csswand.dev/\">CSSwand</a></li>\r\n              </ul>\r\n              <button onClick={handleModel}>Close</button>\r\n          </ReactModal>\r\n      </div>\r\n    );\r\n}\r\nexport default Header;\r\n","const FavItem = props=>{\r\n    const handleClick=()=>{\r\n        props.remove(props.play.id);\r\n    }\r\n    return(\r\n        <li key={props.id}><strong>{props.play.title}</strong> <button onClick={handleClick}>Remove</button></li>\r\n    );\r\n}\r\nexport default FavItem;\r\n","import FavItem from \"./FavItem\";\r\n\r\nconst Favourites= props=>{\r\n    const visible=()=>{\r\n        if (props.visible)\r\n            return \"block\";\r\n        else\r\n            return \"none\";\r\n    }\r\n    return(\r\n        <div>\r\n            <button onClick={props.toggle}>Show/Hide</button>\r\n            <h2 style={{display: visible()}}>Favourites</h2>\r\n            <ul style={{display: visible()}}>\r\n                {props.favourites.map(f=><FavItem key={f.id} play={f} remove={props.remove}/>)}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default Favourites;\r\n","import React, {useState} from \"react\";\r\nimport PlayList from \"./PlayList\";\r\nimport PlayFilter from \"./PlayFilter\";\r\nimport Header from \"./Header\";\r\nimport Favourites from \"./Favourites\";\r\nimport { useLocation} from 'react-router-dom';\r\nimport './DefaultView.css';\r\n\r\nconst DefaultView = (props) =>{\r\n\r\n        \r\n        const location = useLocation()\r\n        const [locationState, changeLocationState] = useState(null);\r\n\r\n        if(typeof location.state != \"undefined\"){\r\n                //fromHomeView holds the array that was entered in the HomeView\r\n                const {fromHomeView} = location.state;\r\n                if (fromHomeView != null) changeLocationState(fromHomeView);\r\n        }\r\n        const [favouritesVisibility, editFavouritesVisibility] = useState(true);\r\n\r\n        const toggleVisibility=()=>{\r\n                if(favouritesVisibility)\r\n                        editFavouritesVisibility(false);\r\n                else\r\n                        editFavouritesVisibility(true);\r\n        }\r\n\r\n        const playlist=locationState===null ? props.plays : locationState;\r\n\r\n        return (\r\n                <div className=\"container\">\r\n                <div className=\"header\">\r\n                <Header/>\r\n                </div>\r\n                <div className=\"favourites\">\r\n                <Favourites favourites={props.favs} visible={favouritesVisibility} remove={props.removeFav} toggle={toggleVisibility}/>\r\n                </div>\r\n                <div className=\"playfilter\">\r\n                <PlayFilter genres={[...new Set(props.plays.map(p=>p.genre))]} filter={props.filter} reset={props.restore}/>\r\n                </div>\r\n                <div className=\"playlist\">\r\n                <PlayList plays={playlist} search={props.search} sort={props.sort} addFav={props.addFav}/>\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\nexport default DefaultView;\r\n","//logic inspired by https://blog.logrocket.com/using-localstorage-react-hooks/\r\nimport {useState, useEffect} from \"react\";\r\n\r\nfunction getStorageValue(key, defaultValue){\r\n    const savedData = JSON.parse(localStorage.getItem(key));\r\n    return savedData || defaultValue;\r\n}\r\n\r\nexport const useLocalStorage = (key, defaultValue) => {\r\n    const [value, setValue] = useState(()=>{\r\n        return getStorageValue(key, defaultValue);\r\n    });\r\n\r\n    useEffect(()=>{\r\n        localStorage.setItem(key, JSON.stringify(value));\r\n    }, [key, value]);\r\n\r\n    return [value, setValue];\r\n};\r\n","import React, { useState } from \"react\";\r\nimport \"./HomeView.css\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst HomeView = (props) => {\r\n\r\n    const [filteredData, setFilteredData] = useState([]);\r\n    const [wordEntered, setWordEntered] = useState(\"\");\r\n\r\n    const handleFilter = (e) => {\r\n    const searchSong = e.target.value;\r\n        setWordEntered(searchSong);\r\n            const newFilter = props.songs.filter((value) => {\r\n                return value.title.toLowerCase().includes(searchSong.toLowerCase());\r\n    });\r\n\r\n    if (searchSong === \"\") {\r\n      setFilteredData([]);\r\n    } else {\r\n      setFilteredData(newFilter);\r\n    }\r\n  };\r\n\r\n\r\n    return (\r\n        <div className=\"background\">\r\n\r\n        <div className=\"minibox\"> Play Browser\r\n\r\n            <div className=\"searchInputs\"> Title: {\" \"}\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"\"\r\n                    value={wordEntered}\r\n                    onChange={handleFilter}\r\n\r\n                />\r\n      {filteredData.length !== 0 && (\r\n        <div className=\"songResult\">\r\n          {filteredData.map((value, key) => {\r\n\r\n            return (\r\n                <p>\r\n                  {value.title}\r\n                </p>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n\r\n          <Link to = {{\r\n              pathname: '/default',\r\n              state: {\r\n                  fromHomeView: filteredData\r\n              }\r\n          }}>\r\n          <button>Show Matching Plays</button>\r\n          </Link>\r\n          <Link to = {{\r\n              pathname: '/default',\r\n              state: {\r\n                  fromHomeView: null\r\n              }\r\n              }}>\r\n          <button>Show All Plays</button>\r\n\r\n          </Link>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeView;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {GiChainedHeart} from \"react-icons/gi\";\r\nimport './DetailView.css';\r\n\r\nconst PlayTitle= props => {\r\n    const handleClick = ()=>{\r\n        props.addFav(props.play);\r\n    }\r\n    if (props.current === \"Text\"){\r\n        return (\r\n            <div className=\"titlebox\">\r\n            <h2> {props.play.title} </h2>\r\n            <select>\r\n                {props.params.acts.map(a=><option>{a}</option>)}\r\n            </select>\r\n                <select>\r\n                    {props.params.scenes.map(sc=><option>{sc}</option>)}\r\n                </select>\r\n                <select>\r\n                    {props.params.speakers.map(sp=><option>{sp}</option>)}\r\n                </select>\r\n                <input type=\"text\" className=\"stringtype\"/>       \r\n            <Link to={{\r\n                pathname: \"/default\",\r\n                state: {\r\n                    fromHomeView: null\r\n                }\r\n            }}>\r\n                <button>Go Back</button>\r\n            </Link>\r\n            <button onClick={handleClick}><GiChainedHeart/></button>\r\n        </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"titletext\">\r\n                <h2> {props.play.title} </h2>\r\n                <div className=\"synopsis\">\r\n                    {props.play.synopsis}\r\n                </div>\r\n\r\n                <Link to={{\r\n                    pathname: \"/default\",\r\n                    state: {\r\n                        fromHomeView: null\r\n                    }\r\n                }}>\r\n                    <button>Go Back</button>\r\n                </Link>\r\n                <button onClick={handleClick}><GiChainedHeart/></button>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default PlayTitle;\r\n","import './DetailView.css';\r\n\r\nconst Tabs = props =>{\r\n    if (props.tabName === \"Details\"){\r\n        return(\r\n            <div className = \"tabtext\" >\r\n                <p>Likely Year: {props.details.likelyDate}</p>\r\n                <p>Genre: {props.details.genre}</p>\r\n                <p>Wiki: {props.details.wiki}, Gutenberg: {props.details.gutenberg}, ShakespeareOrg: {props.details.shakespeareOrg}</p>\r\n                <p>{props.details.desc}</p>\r\n            </div>\r\n        )\r\n    } else if(props.tabName === \"Characters\"){\r\n        return (\r\n            <ul>\r\n                {props.details.map(p=><li key={p}>{p.player}--------{p.desc}</li>)}\r\n            </ul>\r\n        )\r\n    }\r\n    else{\r\n        return (\r\n            <div>\r\n                {props.details.map(act=>{\r\n                    return(\r\n                        <span>\r\n                            <hr/>\r\n                        <h3>{act.name}</h3>\r\n                        {act.scenes.map(sc=>{\r\n                            return(\r\n                                <span>\r\n\r\n                                    <h3>{sc.name}</h3>\r\n                                    <p><em>{sc.title}</em></p>\r\n                                    {sc.speeches.map(sp=>{\r\n                                        return(\r\n                                            <div>\r\n                                                <h3>{sp.speaker}</h3>\r\n                                                {sp.lines.map(l=><p>{l}</p>)}\r\n                                            </div>\r\n                                        )\r\n                                    })}\r\n\r\n                                    <hr/>\r\n\r\n                                </span>\r\n                            )\r\n                        })}\r\n                        </span>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Tabs;\r\n","import {useLocalStorage} from \"../Hooks/useLocalStorage\";\r\nimport {useEffect, useState} from \"react\";\r\nimport Tabs from \"./Tabs\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport './DetailView.css';\r\n\r\nconst Tab = (props)=>{\r\n\r\n    const [play, setPlay] = useLocalStorage(props.id, null);\r\n    const [isFetching, stopFetching] = useState(true);\r\n    const [buttons, changeButtons] = useState([]);\r\n    const [tabProps, changeTabProps] = useState({})\r\n    \r\n    const checkButtons = ()=>{\r\n        if (props.play.filename === \"\"){\r\n            changeButtons([\"Details\"]);\r\n        } else {\r\n            changeButtons([\"Details\", \"Characters\", \"Text\"]);\r\n        }\r\n    }\r\n    useEffect(()=> {\r\n        const url = `https://www.randyconnolly.com//funwebdev/3rd/api/shakespeare/play.php?name=${props.id}`; //url to fetch data with props id\r\n        if (play === null && props.play.filename !== \"\"){\r\n            fetch(url)\r\n                .then(resp=>{\r\n                    if (resp.ok) {\r\n                        return resp.json();\r\n                    }\r\n                    else {\r\n                        throw new Error(\"Fetch failed\");\r\n                    }\r\n                }).then(data=>{\r\n                setPlay(data);\r\n                checkButtons();\r\n                changeTabProps({details: props.play, tabName: \"Details\"});\r\n                stopFetching(false);\r\n            })\r\n                .catch(error=>console.error(error));\r\n        } else {\r\n            stopFetching(false);\r\n            checkButtons();\r\n            changeTabProps({details: props.play, tabName: \"Details\"});\r\n        }\r\n\r\n    }, [props.id, play, setPlay, props.play]);\r\n\r\n    const handleTabChange = (e)=>{\r\n        if(e.target.innerHTML === \"Details\") {\r\n            changeTabProps({details: props.play, tabName: \"Details\"});\r\n            props.tabState(e.target.innerHTML);\r\n        }else if(e.target.innerHTML === \"Characters\") {\r\n            changeTabProps({details: play.persona, tabName: \"Characters\"});\r\n            props.tabState(e.target.innerHTML);\r\n        }else if(e.target.innerHTML === \"Text\") {\r\n            changeTabProps({details: play.acts, tabName: \"Text\"});\r\n            let acts = [];\r\n            let scenes = [];\r\n            const char = play.persona.map(p=>p.player);\r\n            play.acts.forEach(a=>{\r\n                acts.push(a.name);\r\n                a.scenes.forEach(s=>{\r\n                    scenes.push(s);\r\n                })\r\n            })\r\n            props.tabState(e.target.innerHTML, acts, [...new Set(scenes.map(s=>s.name))], char);\r\n        }\r\n    }\r\n    if (isFetching)\r\n        return <Loader type=\"Circles\" color=\"#00BFFF\" height=\"50vh\" width=\"50vh\"/>\r\n    else {\r\n        return (\r\n            <div>\r\n                <span className=\"tabs\">{buttons.map(b => <button onClick={handleTabChange}>{b}</button>)}</span>\r\n                <Tabs {...tabProps} key = {props.id}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Tab;","import React from 'react'\r\nimport Header from \"./Header\";\r\nimport PlayTitle from \"./PlayTitle\";\r\nimport {useState} from \"react\";\r\nimport {useLocation, useParams} from \"react-router-dom\";\r\nimport Tab from \"./Tab\";\r\nimport './DetailView.css';\r\n\r\nconst PlayDetails = (props) => {\r\n    const {play:id} = useParams();\r\n    const location = useLocation();\r\n    const {play:details} = location.state;\r\n    const [currentTab, changeCurrentTab] = useState(\"Details\");\r\n    const [searchParams, editSearchParams] = useState({});\r\n    const changeTabState = (tab, acts = null, scenes = null, speakers = null) =>{\r\n        if (tab === \"Text\"){\r\n            setupSearch(acts, scenes, speakers);\r\n            changeCurrentTab(tab);\r\n        } else if(tab === \"Details\") {\r\n            changeCurrentTab(\"Details\");\r\n        } else {\r\n            changeCurrentTab(\"Characters\");\r\n        }\r\n\r\n    }\r\n\r\n    const setupSearch = (acts, scenes, speakers)=>{\r\n        editSearchParams({acts: acts, scenes: scenes, speakers: speakers})\r\n    }\r\n\r\n    return (\r\n        <div className=\"detailView\">\r\n            <div className=\"header\">\r\n            <Header/>\r\n            </div>\r\n            <div className=\"playtitle\">\r\n            <PlayTitle play={details} addFav={props.addFav} current={currentTab} params={searchParams}/>\r\n            </div>\r\n            <div className=\"tab\">\r\n            <Tab play={details} id={id} tabState={changeTabState}/>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default PlayDetails;\r\n","import './App.css';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport {useState, useEffect} from \"react\";\r\nimport DefaultView from \"./Components/DefaultView\";\r\nimport {useLocalStorage} from \"./Hooks/useLocalStorage\";\r\nimport * as cloneDeep from \"lodash/cloneDeep\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport HomeView from \"./Components/HomeView\";\r\nimport PlayDetails from \"./Components/PlayDetails\";\r\n\r\n\r\nfunction App() {\r\n\r\n    //local storage logic inspired by https://blog.logrocket.com/using-localstorage-react-hooks/\r\n    const [fullPlaysList, setFullPlaysList] = useLocalStorage(\"plays\", []);\r\n    //fullPlaysList contains the entire list unedited of plays as fetched from the api/local storage, while plays will be\r\n    //altered by filter/sort/restorePlays functions and passed to other components as props\r\n    const [plays, updatePlays] = useState([]);\r\n    const [isFetching, stopFetching] = useState(true);\r\n    const [favourites, editFavourites] = useLocalStorage(\"fav\",[]);\r\n\r\n    useEffect(()=> {\r\n        const url = \"https://www.randyconnolly.com//funwebdev/3rd/api/shakespeare/list.php\"; //url to fetch data\r\n        if (fullPlaysList.length === 0) { //only fetches if local storage doesn't exist\r\n            fetch(url)\r\n                .then(response => {\r\n                    if (response.ok) {\r\n                        return response.json();\r\n                    } else {\r\n                        throw new Error(\"Fetch failed\");\r\n                    }\r\n                })\r\n                .then(data => {\r\n                    //places fetched data in state & local storage\r\n                    setFullPlaysList(data.sort((a, b) => a.title>b.title ? 1 : -1));\r\n                    updatePlays(data.sort((a, b) => a.title>b.title ? 1 : -1));\r\n                    stopFetching(false);\r\n                })\r\n                .catch(error => console.error(error));\r\n        } else {\r\n            updatePlays(fullPlaysList);\r\n            stopFetching(false);\r\n        }\r\n    }, [fullPlaysList, setFullPlaysList])\r\n\r\n    const sort = (e)=> {\r\n        //cloning plays list\r\n        const sortedPlays = cloneDeep(plays);\r\n        let sortBy;\r\n        //if sorting by year, sets sortBy variable to likelyDate\r\n        //otherwise, sortBy variable is set to title\r\n        if(e.target.textContent.toLowerCase() === \"year\")\r\n            sortBy=\"likelyDate\";\r\n        else\r\n            sortBy=e.target.textContent.toLowerCase();\r\n        sortedPlays.sort((a, b) => a[sortBy]>b[sortBy] ? 1 : -1);\r\n        updatePlays(sortedPlays);\r\n    }\r\n\r\n    //uses fullPlaysList state variable to reset plays\r\n    const restorePlays = ()=>{\r\n        updatePlays(fullPlaysList);\r\n    }\r\n    const removeFavourite=(id)=>{\r\n        const favouritesCopy = cloneDeep(favourites);\r\n        const favToDelete=favouritesCopy.findIndex(f=>f.id === id);\r\n        favouritesCopy.splice(favToDelete, 1);\r\n        editFavourites(favouritesCopy);\r\n    }\r\n    const addFavourite=(play)=>{\r\n        const exists = favourites.find(f=>f.id === play.id);\r\n        if (typeof exists === 'undefined')\r\n        {\r\n            const favouritesCopy = cloneDeep(favourites);\r\n            favouritesCopy.push(play);\r\n            editFavourites(favouritesCopy);\r\n        } else\r\n            alert(\"Play already in Favourites list\");\r\n    }\r\n    const filter = filters =>{\r\n        //function to filter list by dates\r\n        const filterPlaysByDate = (before, after, filteredPlays) => {\r\n            //only returns plays whose years are between before and after years when both are specified,\r\n            //or only matches the parameters of one when the other is missing\r\n            return filteredPlays.filter((p)=> (before > p.likelyDate && p.likelyDate > after) ||\r\n                (typeof after === \"undefined\" && p.likelyDate < before) ||\r\n                (typeof before === \"undefined\" && p.likelyDate > after));\r\n        }\r\n        //function to filter by title and/or genre\r\n        const filterPlaysByTitleGenre = (titleString, genre, filteredPlays) =>{\r\n            //only returns plays that match both title and genre when both are specified,\r\n            //or only matches the parameters of one when the other is missing\r\n            return filteredPlays.filter(p=> (p.title.toLowerCase().includes(titleString) && p.genre === genre) ||\r\n                (typeof genre === \"undefined\" && p.title.toLowerCase().includes(titleString)) ||\r\n                (typeof titleString === \"undefined\" && p.genre === genre));\r\n        }\r\n        //initial value of filteredPlays set to fullPlaysList in case user does multiple filter requests in a row without\r\n        //clearing initial filters\r\n        let filteredPlays = cloneDeep(fullPlaysList);\r\n        //only filters by title or genre if at least one is specified\r\n        if (typeof filters.title != \"undefined\" || typeof filters.genre != \"undefined\"){\r\n            const filterTitleGenre = cloneDeep(filteredPlays);\r\n            filteredPlays = filterPlaysByTitleGenre(filters.title.toLowerCase(), filters.genre, filterTitleGenre);\r\n        }\r\n\r\n        //only filters by dates if either before or after year is specified\r\n        if (typeof filters.before != \"undefined\" || typeof filters.after != \"undefined\"){\r\n            const filterByDate = cloneDeep(filteredPlays);\r\n            filteredPlays = filterPlaysByDate(filters.before, filters.after, filterByDate);\r\n        }\r\n\r\n        //sets the list of filtered plays to state\r\n        updatePlays(filteredPlays);\r\n    }\r\n    //while fetching data, displays loading symbol\r\n    if (isFetching && plays.length === 0){\r\n        return <Loader type=\"Circles\" color=\"#00BFFF\" height=\"50vh\" width=\"50vh\"/>\r\n    } else{\r\n        return (\r\n            <div className=\"App\">\r\n\r\n                <Route path=\"/\" exact>\r\n                    <HomeView songs={fullPlaysList} />\r\n                </Route>\r\n                <Route path=\"/HomeView\" exact>\r\n                     <HomeView songs={fullPlaysList} />\r\n                 </Route>\r\n                <Route path='/default' exact>\r\n                    <DefaultView plays={plays} restore={restorePlays} filter={filter} sort={sort} favs={favourites} addFav={addFavourite} removeFav={removeFavourite} />\r\n                </Route>\r\n                <Switch>\r\n                    <Route path='/:play/details' exact>\r\n                        <PlayDetails addFav={addFavourite}/>\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { HashRouter} from 'react-router-dom';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <HashRouter>\r\n    <App />\r\n      </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}