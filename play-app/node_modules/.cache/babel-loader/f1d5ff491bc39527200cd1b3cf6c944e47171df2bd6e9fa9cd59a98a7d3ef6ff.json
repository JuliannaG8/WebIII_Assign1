{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Justi\\\\Desktop\\\\Web3Assignment1\\\\webiii_assign1\\\\play-app\\\\src\\\\Components\\\\Tab.js\",\n    _s = $RefreshSig$();\n\nimport { useLocalStorage } from \"../Hooks/useLocalStorage\";\nimport { useEffect, useState } from \"react\";\nimport Tabs from \"./Tabs\";\nimport Loader from \"react-loader-spinner\";\nimport './DetailView.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\n\nconst Tab = props => {\n  _s();\n\n  const [play, setPlay] = useLocalStorage(props.id, null);\n  const [isFetching, stopFetching] = useState(true);\n  const [buttons, changeButtons] = useState([]);\n  const [tabProps, changeTabProps] = useState({});\n  useEffect(() => {\n    const url = `https://www.randyconnolly.com//funwebdev/3rd/api/shakespeare/play.php?name=${props.id}`; //url to fetch data with props id\n\n    if (play === null && props.play.filename !== \"\") {\n      fetch(url).then(resp => {\n        if (resp.ok) {\n          return resp.json();\n        } else {\n          throw new Error(\"Fetch failed\");\n        }\n      }).then(data => {\n        setPlay(data);\n        checkButtons();\n        changeTabProps({\n          details: props.play,\n          tabName: \"Details\"\n        });\n        stopFetching(false);\n      }).catch(error => console.error(error));\n    } else {\n      stopFetching(false);\n      checkButtons();\n      changeTabProps({\n        details: props.play,\n        tabName: \"Details\"\n      });\n    }\n  }, [props.id, play, setPlay, checkButtons, props.play]);\n\n  const handleTabChange = e => {\n    if (e.target.innerHTML === \"Details\") {\n      changeTabProps({\n        details: props.play,\n        tabName: \"Details\"\n      });\n      props.tabState(e.target.innerHTML);\n    } else if (e.target.innerHTML === \"Characters\") {\n      changeTabProps({\n        details: play.persona,\n        tabName: \"Characters\"\n      });\n      props.tabState(e.target.innerHTML);\n    } else if (e.target.innerHTML === \"Text\") {\n      changeTabProps({\n        details: play.acts,\n        tabName: \"Text\"\n      });\n      let acts = [];\n      let scenes = [];\n      const char = play.persona.map(p => p.player);\n      play.acts.forEach(a => {\n        acts.push(a.name);\n        a.scenes.forEach(s => {\n          scenes.push(s);\n        });\n      });\n      props.tabState(e.target.innerHTML, acts, [...new Set(scenes.map(s => s.name))], char);\n    }\n  };\n\n  if (isFetching) return /*#__PURE__*/_jsxDEV(Loader, {\n    type: \"Circles\",\n    color: \"#00BFFF\",\n    height: \"50vh\",\n    width: \"50vh\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 16\n  }, this);else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"tabs\",\n        children: buttons.map(b => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleTabChange,\n          children: b\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 58\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_createElement(Tabs, { ...tabProps,\n        key: props.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(Tab, \"U5svXZHMtw6NfbcFscmgWTWpFhs=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = Tab;\nexport default Tab;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tab\");","map":{"version":3,"sources":["C:/Users/Justi/Desktop/Web3Assignment1/webiii_assign1/play-app/src/Components/Tab.js"],"names":["useLocalStorage","useEffect","useState","Tabs","Loader","Tab","props","play","setPlay","id","isFetching","stopFetching","buttons","changeButtons","tabProps","changeTabProps","url","filename","fetch","then","resp","ok","json","Error","data","checkButtons","details","tabName","catch","error","console","handleTabChange","e","target","innerHTML","tabState","persona","acts","scenes","char","map","p","player","forEach","a","push","name","s","Set","b"],"mappings":"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","sourcesContent":["import {useLocalStorage} from \"../Hooks/useLocalStorage\";\r\nimport {useEffect, useState} from \"react\";\r\nimport Tabs from \"./Tabs\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport './DetailView.css';\r\n\r\nconst Tab = (props)=>{\r\n\r\n    const [play, setPlay] = useLocalStorage(props.id, null);\r\n    const [isFetching, stopFetching] = useState(true);\r\n    const [buttons, changeButtons] = useState([]);\r\n    const [tabProps, changeTabProps] = useState({})\r\n   \r\n    useEffect(()=> {\r\n        const url = `https://www.randyconnolly.com//funwebdev/3rd/api/shakespeare/play.php?name=${props.id}`; //url to fetch data with props id\r\n        if (play === null && props.play.filename !== \"\"){\r\n            fetch(url)\r\n                .then(resp=>{\r\n                    if (resp.ok) {\r\n                        return resp.json();\r\n                    }\r\n                    else {\r\n                        throw new Error(\"Fetch failed\");\r\n                    }\r\n                }).then(data=>{\r\n                setPlay(data);\r\n                checkButtons();\r\n                changeTabProps({details: props.play, tabName: \"Details\"});\r\n                stopFetching(false);\r\n            })\r\n                .catch(error=>console.error(error));\r\n        } else {\r\n            stopFetching(false);\r\n            checkButtons();\r\n            changeTabProps({details: props.play, tabName: \"Details\"});\r\n        }\r\n\r\n    }, [props.id, play, setPlay, checkButtons, props.play]);\r\n\r\n    const handleTabChange = (e)=>{\r\n        if(e.target.innerHTML === \"Details\") {\r\n            changeTabProps({details: props.play, tabName: \"Details\"});\r\n            props.tabState(e.target.innerHTML);\r\n        }else if(e.target.innerHTML === \"Characters\") {\r\n            changeTabProps({details: play.persona, tabName: \"Characters\"});\r\n            props.tabState(e.target.innerHTML);\r\n        }else if(e.target.innerHTML === \"Text\") {\r\n            changeTabProps({details: play.acts, tabName: \"Text\"});\r\n            let acts = [];\r\n            let scenes = [];\r\n            const char = play.persona.map(p=>p.player);\r\n            play.acts.forEach(a=>{\r\n                acts.push(a.name);\r\n                a.scenes.forEach(s=>{\r\n                    scenes.push(s);\r\n                })\r\n            })\r\n            props.tabState(e.target.innerHTML, acts, [...new Set(scenes.map(s=>s.name))], char);\r\n        }\r\n    }\r\n    if (isFetching)\r\n        return <Loader type=\"Circles\" color=\"#00BFFF\" height=\"50vh\" width=\"50vh\"/>\r\n    else {\r\n        return (\r\n            <div>\r\n                <span className=\"tabs\">{buttons.map(b => <button onClick={handleTabChange}>{b}</button>)}</span>\r\n                <Tabs {...tabProps} key = {props.id}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Tab;"]},"metadata":{},"sourceType":"module"}