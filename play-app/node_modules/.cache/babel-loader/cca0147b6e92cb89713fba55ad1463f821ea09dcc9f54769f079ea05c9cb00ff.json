{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Justi\\\\Desktop\\\\Web3Assignment1\\\\webiii_assign1\\\\play-app\\\\src\\\\Components\\\\PlayTitle.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { GiChainedHeart } from \"react-icons/gi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PlayTitle = props => {\n  const handleClick = () => {\n    props.addFav(props.play);\n  };\n\n  if (props.current === \"Text\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"titlebox\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\" \", props.play.title, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        children: props.params.acts.map(a => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: a\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 43\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        children: props.params.scenes.map(sc => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: sc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 50\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        children: props.params.speakers.map(sp => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: sp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 52\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        style: {\n          height: \"50px\"\n        },\n        placeholder: \"type here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: {\n          pathname: \"/default\",\n          state: {\n            fromHomeView: null\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: /*#__PURE__*/_jsxDEV(GiChainedHeart, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"default\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\" \", props.play.title, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: props.play.synopsis\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: {\n          pathname: \"/default\",\n          state: {\n            fromHomeView: null\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: /*#__PURE__*/_jsxDEV(GiChainedHeart, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_c = PlayTitle;\nexport default PlayTitle;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayTitle\");","map":{"version":3,"sources":["C:/Users/Justi/Desktop/Web3Assignment1/webiii_assign1/play-app/src/Components/PlayTitle.js"],"names":["React","Link","GiChainedHeart","PlayTitle","props","handleClick","addFav","play","current","title","params","acts","map","a","scenes","sc","speakers","sp","height","pathname","state","fromHomeView","synopsis"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,cAAR,QAA6B,gBAA7B;;;AAEA,MAAMC,SAAS,GAAEC,KAAK,IAAI;AACtB,QAAMC,WAAW,GAAG,MAAI;AACpBD,IAAAA,KAAK,CAACE,MAAN,CAAaF,KAAK,CAACG,IAAnB;AACH,GAFD;;AAGA,MAAIH,KAAK,CAACI,OAAN,KAAkB,MAAtB,EAA6B;AACzB,wBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACA;AAAA,wBAAMJ,KAAK,CAACG,IAAN,CAAWE,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAA,kBACKL,KAAK,CAACM,MAAN,CAAaC,IAAb,CAAkBC,GAAlB,CAAsBC,CAAC,iBAAE;AAAA,oBAASA;AAAT;AAAA;AAAA;AAAA;AAAA,gBAAzB;AADL;AAAA;AAAA;AAAA;AAAA,cAFA,eAKI;AAAA,kBACKT,KAAK,CAACM,MAAN,CAAaI,MAAb,CAAoBF,GAApB,CAAwBG,EAAE,iBAAE;AAAA,oBAASA;AAAT;AAAA;AAAA;AAAA;AAAA,gBAA5B;AADL;AAAA;AAAA;AAAA;AAAA,cALJ,eAQI;AAAA,kBACKX,KAAK,CAACM,MAAN,CAAaM,QAAb,CAAsBJ,GAAtB,CAA0BK,EAAE,iBAAE;AAAA,oBAASA;AAAT;AAAA;AAAA;AAAA;AAAA,gBAA9B;AADL;AAAA;AAAA;AAAA;AAAA,cARJ,eAWI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAE;AAACC,UAAAA,MAAM,EAAE;AAAT,SAA1B;AAA4C,QAAA,WAAW,EAAE;AAAzD;AAAA;AAAA;AAAA;AAAA,cAXJ,eAYA,QAAC,IAAD;AAAM,QAAA,EAAE,EAAE;AACNC,UAAAA,QAAQ,EAAE,UADJ;AAENC,UAAAA,KAAK,EAAE;AACHC,YAAAA,YAAY,EAAE;AADX;AAFD,SAAV;AAAA,+BAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,cAZA,eAoBA;AAAQ,QAAA,OAAO,EAAEhB,WAAjB;AAAA,+BAA8B,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAA9B;AAAA;AAAA;AAAA;AAAA,cApBA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAwBH,GAzBD,MA0BK;AACD,wBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACI;AAAA,wBAAMD,KAAK,CAACG,IAAN,CAAWE,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBACKL,KAAK,CAACG,IAAN,CAAWe;AADhB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAMI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAE;AACNH,UAAAA,QAAQ,EAAE,UADJ;AAENC,UAAAA,KAAK,EAAE;AACHC,YAAAA,YAAY,EAAE;AADX;AAFD,SAAV;AAAA,+BAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,cANJ,eAcI;AAAQ,QAAA,OAAO,EAAEhB,WAAjB;AAAA,+BAA8B,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAA9B;AAAA;AAAA;AAAA;AAAA,cAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAmBH;AACJ,CAnDD;;KAAMF,S;AAqDN,eAAeA,SAAf","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {GiChainedHeart} from \"react-icons/gi\";\r\n\r\nconst PlayTitle= props => {\r\n    const handleClick = ()=>{\r\n        props.addFav(props.play);\r\n    }\r\n    if (props.current === \"Text\"){\r\n        return (\r\n            <div className=\"titlebox\">\r\n            <h2> {props.play.title} </h2>\r\n            <select>\r\n                {props.params.acts.map(a=><option>{a}</option>)}\r\n            </select>\r\n                <select>\r\n                    {props.params.scenes.map(sc=><option>{sc}</option>)}\r\n                </select>\r\n                <select>\r\n                    {props.params.speakers.map(sp=><option>{sp}</option>)}\r\n                </select>\r\n                <input type=\"text\" style={{height: \"50px\"}} placeholder={\"type here\"}/> \r\n            <Link to={{\r\n                pathname: \"/default\",\r\n                state: {\r\n                    fromHomeView: null\r\n                }\r\n            }}>\r\n                <button>Close</button>\r\n            </Link>\r\n            <button onClick={handleClick}><GiChainedHeart/></button>\r\n        </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"default\">\r\n                <h2> {props.play.title} </h2>\r\n                <div>\r\n                    {props.play.synopsis}\r\n                </div>\r\n\r\n                <Link to={{\r\n                    pathname: \"/default\",\r\n                    state: {\r\n                        fromHomeView: null\r\n                    }\r\n                }}>\r\n                    <button>Close</button>\r\n                </Link>\r\n                <button onClick={handleClick}><GiChainedHeart/></button>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default PlayTitle;\r\n"]},"metadata":{},"sourceType":"module"}