{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Justi\\\\VSC folder\\\\Web 3\\\\A1\\\\WebIII_assign1\\\\play-app\\\\src\\\\Components\\\\PlayDetails.js\";\nimport React from 'react';\nimport Header from \"./Header\";\nimport Favourites from \"./Favourites\";\nimport PlayTitle from \"./PlayTitle\";\nimport Tabs from \"./Tabs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PlayDetails extends Component {\n  renderfetch() {\n    const [fullPlaysList, setFullPlaysList] = useLocalStorage(\"plays\", []);\n    const [plays, updatePlays] = useState([]);\n    const [isFetching, stopFetching] = useState(true);\n    useEffect(() => {\n      const url = \"https://www.randyconnolly.com//funwebdev/3rd/api/shakespeare/list.php\"; //url to fetch data\n\n      if (fullPlaysList.length === 0) {\n        //only fetches if local storage doesn't exist\n        fetch(url).then(response => {\n          if (response.ok) {\n            return response.json();\n          } else {\n            return new Error(\"Fetch failed\");\n          }\n        }).then(data => {\n          //places fetched data in state & local storage\n          setFullPlaysList(data.sort((a, b) => a.title > b.title ? 1 : -1));\n          updatePlays(data.sort((a, b) => a.title > b.title ? 1 : -1));\n          stopFetching(false);\n        }).catch(error => console.error(error));\n      } else {\n        updatePlays(fullPlaysList);\n        stopFetching(false);\n      }\n    }, [fullPlaysList, setFullPlaysList]);\n    renderDisableTabs();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"default\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PlayTitle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          label: \"Details\",\n          children: props.details\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          label: \"Characters\",\n          children: props.characters\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          label: \"Text\",\n          children: props.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 1\n    }, this);\n  }\n\n}\n\nexport default PlayDetails;","map":{"version":3,"sources":["C:/Users/Justi/VSC folder/Web 3/A1/WebIII_assign1/play-app/src/Components/PlayDetails.js"],"names":["React","Header","Favourites","PlayTitle","Tabs","PlayDetails","Component","renderfetch","fullPlaysList","setFullPlaysList","useLocalStorage","plays","updatePlays","useState","isFetching","stopFetching","useEffect","url","length","fetch","then","response","ok","json","Error","data","sort","a","b","title","catch","error","console","renderDisableTabs","props","details","characters","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,WAAN,SAA0BC,SAA1B,CAAoC;AAEpCC,EAAAA,WAAW,GAAG;AACV,UAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCC,eAAe,CAAC,OAAD,EAAU,EAAV,CAAzD;AACA,UAAM,CAACC,KAAD,EAAQC,WAAR,IAAuBC,QAAQ,CAAC,EAAD,CAArC;AACA,UAAM,CAACC,UAAD,EAAaC,YAAb,IAA6BF,QAAQ,CAAC,IAAD,CAA3C;AAEAG,IAAAA,SAAS,CAAC,MAAK;AACX,YAAMC,GAAG,GAAG,uEAAZ,CADW,CAC0E;;AACrF,UAAIT,aAAa,CAACU,MAAd,KAAyB,CAA7B,EAAgC;AAAE;AAC9BC,QAAAA,KAAK,CAACF,GAAD,CAAL,CACKG,IADL,CACUC,QAAQ,IAAI;AACd,cAAIA,QAAQ,CAACC,EAAb,EAAiB;AACb,mBAAOD,QAAQ,CAACE,IAAT,EAAP;AACH,WAFD,MAEO;AACH,mBAAO,IAAIC,KAAJ,CAAU,cAAV,CAAP;AACH;AACJ,SAPL,EAQKJ,IARL,CAQUK,IAAI,IAAI;AACV;AACAhB,UAAAA,gBAAgB,CAACgB,IAAI,CAACC,IAAL,CAAU,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,KAAF,GAAQD,CAAC,CAACC,KAAV,GAAkB,CAAlB,GAAsB,CAAC,CAA3C,CAAD,CAAhB;AACAjB,UAAAA,WAAW,CAACa,IAAI,CAACC,IAAL,CAAU,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,KAAF,GAAQD,CAAC,CAACC,KAAV,GAAkB,CAAlB,GAAsB,CAAC,CAA3C,CAAD,CAAX;AACAd,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,SAbL,EAcKe,KAdL,CAcWC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAdpB;AAeH,OAhBD,MAgBO;AACHnB,QAAAA,WAAW,CAACJ,aAAD,CAAX;AACAO,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AACJ,KAtBQ,EAsBN,CAACP,aAAD,EAAgBC,gBAAhB,CAtBM,CAAT;AA0BJwB,IAAAA,iBAAiB;AAEjB,wBACA;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACQ,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADR,eAEQ,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAFR,eAGQ,QAAC,IAAD;AAAA,gCACI;AAAK,UAAA,KAAK,EAAC,SAAX;AAAA,oBACKC,KAAK,CAACC;AADX;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,KAAK,EAAC,YAAX;AAAA,oBACKD,KAAK,CAACE;AADX;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAOI;AAAK,UAAA,KAAK,EAAC,MAAX;AAAA,oBACKF,KAAK,CAACG;AADX;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHR;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAkBC;;AArDmC;;AAwDpC,eAAehC,WAAf","sourcesContent":["import React from 'react'\r\nimport Header from \"./Header\";\r\nimport Favourites from \"./Favourites\";\r\nimport PlayTitle from \"./PlayTitle\";\r\nimport Tabs from \"./Tabs\";\r\n\r\nclass PlayDetails extends Component {\r\n\r\nrenderfetch() {\r\n    const [fullPlaysList, setFullPlaysList] = useLocalStorage(\"plays\", []);  \r\n    const [plays, updatePlays] = useState([]);\r\n    const [isFetching, stopFetching] = useState(true);\r\n    \r\n    useEffect(()=> {\r\n        const url = \"https://www.randyconnolly.com//funwebdev/3rd/api/shakespeare/list.php\"; //url to fetch data\r\n        if (fullPlaysList.length === 0) { //only fetches if local storage doesn't exist\r\n            fetch(url)\r\n                .then(response => {\r\n                    if (response.ok) {\r\n                        return response.json();\r\n                    } else {\r\n                        return new Error(\"Fetch failed\");\r\n                    }\r\n                })\r\n                .then(data => {\r\n                    //places fetched data in state & local storage\r\n                    setFullPlaysList(data.sort((a, b) => a.title>b.title ? 1 : -1));\r\n                    updatePlays(data.sort((a, b) => a.title>b.title ? 1 : -1));\r\n                    stopFetching(false);\r\n                })\r\n                .catch(error => console.error(error));\r\n        } else {\r\n            updatePlays(fullPlaysList);\r\n            stopFetching(false);\r\n        }\r\n    }, [fullPlaysList, setFullPlaysList])\r\n\r\n\r\n\r\nrenderDisableTabs() \r\n\r\nreturn(\r\n<div className=\"default\">\r\n        <Header/>\r\n        <PlayTitle /> \r\n        <Tabs>\r\n            <div label=\"Details\">\r\n                {props.details}\r\n            </div>\r\n            <div label=\"Characters\">\r\n                {props.characters}\r\n            </div>\r\n            <div label=\"Text\">\r\n                {props.text}\r\n            </div>\r\n        </Tabs>\r\n</div>\r\n  \r\n)\r\n}\r\n\r\n}\r\nexport default PlayDetails;"]},"metadata":{},"sourceType":"module"}