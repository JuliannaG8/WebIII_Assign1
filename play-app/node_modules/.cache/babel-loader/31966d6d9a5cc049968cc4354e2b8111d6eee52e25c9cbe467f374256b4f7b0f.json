{"ast":null,"code":"import _slicedToArray from\"C:/Users/Justi/Desktop/Web3Assignment1/WebIII_Assign1/play-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import'./App.css';import{Route,Switch}from'react-router-dom';import{useState,useEffect}from\"react\";import DefaultView from\"./Components/DefaultView\";import{useLocalStorage}from\"./Hooks/useLocalStorage\";import*as cloneDeep from\"lodash/cloneDeep\";import Loader from\"react-loader-spinner\";import HomeView from\"./Components/HomeView\";import PlayDetails from\"./Components/PlayDetails\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){//local storage logic inspired by https://blog.logrocket.com/using-localstorage-react-hooks/\nvar _useLocalStorage=useLocalStorage(\"plays\",[]),_useLocalStorage2=_slicedToArray(_useLocalStorage,2),fullPlaysList=_useLocalStorage2[0],setFullPlaysList=_useLocalStorage2[1];//fullPlaysList contains the entire list unedited of plays as fetched from the api/local storage, while plays will be\n//altered by filter/sort/restorePlays functions and passed to other components as props\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),plays=_useState2[0],updatePlays=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),isFetching=_useState4[0],stopFetching=_useState4[1];var _useLocalStorage3=useLocalStorage(\"fav\",[]),_useLocalStorage4=_slicedToArray(_useLocalStorage3,2),favourites=_useLocalStorage4[0],editFavourites=_useLocalStorage4[1];useEffect(function(){var url=\"https://www.randyconnolly.com//funwebdev/3rd/api/shakespeare/list.php\";//url to fetch data\nif(fullPlaysList.length===0){//only fetches if local storage doesn't exist\nfetch(url).then(function(response){if(response.ok){return response.json();}else{throw new Error(\"Fetch failed\");}}).then(function(data){//places fetched data in state & local storage\nsetFullPlaysList(data.sort(function(a,b){return a.title>b.title?1:-1;}));updatePlays(data.sort(function(a,b){return a.title>b.title?1:-1;}));stopFetching(false);}).catch(function(error){return console.error(error);});}else{updatePlays(fullPlaysList);stopFetching(false);}},[fullPlaysList,setFullPlaysList]);var sort=function sort(e){//cloning plays list\nvar sortedPlays=cloneDeep(plays);var sortBy;//if sorting by year, sets sortBy variable to likelyDate\n//otherwise, sortBy variable is set to title\nif(e.target.textContent.toLowerCase()===\"year\")sortBy=\"likelyDate\";else sortBy=e.target.textContent.toLowerCase();sortedPlays.sort(function(a,b){return a[sortBy]>b[sortBy]?1:-1;});updatePlays(sortedPlays);};//uses fullPlaysList state variable to reset plays\nvar restorePlays=function restorePlays(){updatePlays(fullPlaysList);};var removeFavourite=function removeFavourite(id){var favouritesCopy=cloneDeep(favourites);var favToDelete=favouritesCopy.findIndex(function(f){return f.id===id;});favouritesCopy.splice(favToDelete,1);editFavourites(favouritesCopy);};var addFavourite=function addFavourite(play){var exists=favourites.find(function(f){return f.id===play.id;});if(typeof exists==='undefined'){var favouritesCopy=cloneDeep(favourites);favouritesCopy.push(play);editFavourites(favouritesCopy);}else alert(\"Play already in Favourites list\");};var filter=function filter(filters){//function to filter list by dates\nvar filterPlaysByDate=function filterPlaysByDate(before,after,filteredPlays){//only returns plays whose years are between before and after years when both are specified,\n//or only matches the parameters of one when the other is missing\nreturn filteredPlays.filter(function(p){return before>p.likelyDate&&p.likelyDate>after||typeof after===\"undefined\"&&p.likelyDate<before||typeof before===\"undefined\"&&p.likelyDate>after;});};//function to filter by title and/or genre\nvar filterPlaysByTitleGenre=function filterPlaysByTitleGenre(titleString,genre,filteredPlays){//only returns plays that match both title and genre when both are specified,\n//or only matches the parameters of one when the other is missing\nreturn filteredPlays.filter(function(p){return p.title.toLowerCase().includes(titleString)&&p.genre===genre||typeof genre===\"undefined\"&&p.title.toLowerCase().includes(titleString)||typeof titleString===\"undefined\"&&p.genre===genre;});};//initial value of filteredPlays set to fullPlaysList in case user does multiple filter requests in a row without\n//clearing initial filters\nvar filteredPlays=cloneDeep(fullPlaysList);//only filters by title or genre if at least one is specified\nif(typeof filters.title!=\"undefined\"||typeof filters.genre!=\"undefined\"){var filterTitleGenre=cloneDeep(filteredPlays);filteredPlays=filterPlaysByTitleGenre(filters.title.toLowerCase(),filters.genre,filterTitleGenre);}//only filters by dates if either before or after year is specified\nif(typeof filters.before!=\"undefined\"||typeof filters.after!=\"undefined\"){var filterByDate=cloneDeep(filteredPlays);filteredPlays=filterPlaysByDate(filters.before,filters.after,filterByDate);}//sets the list of filtered plays to state\nupdatePlays(filteredPlays);};//while fetching data, displays loading symbol\nif(isFetching&&plays.length===0){return/*#__PURE__*/_jsx(Loader,{type:\"Circles\",color:\"#00BFFF\",height:\"50vh\",width:\"50vh\"});}else{return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Route,{path:\"/\",exact:true,children:/*#__PURE__*/_jsx(HomeView,{songs:fullPlaysList})}),/*#__PURE__*/_jsx(Route,{path:\"/HomeView\",exact:true,children:/*#__PURE__*/_jsx(HomeView,{songs:fullPlaysList})}),/*#__PURE__*/_jsx(Route,{path:\"/default\",exact:true,children:/*#__PURE__*/_jsx(DefaultView,{plays:plays,restore:restorePlays,filter:filter,sort:sort,favs:favourites,addFav:addFavourite,removeFav:removeFavourite})}),/*#__PURE__*/_jsx(Switch,{children:/*#__PURE__*/_jsx(Route,{path:\"/:play/details\",children:/*#__PURE__*/_jsx(PlayDetails,{addFav:addFavourite})})})]});}}export default App;","map":{"version":3,"sources":["C:/Users/Justi/Desktop/Web3Assignment1/webiii_assign1/play-app/src/App.js"],"names":["Route","Switch","useState","useEffect","DefaultView","useLocalStorage","cloneDeep","Loader","HomeView","PlayDetails","App","fullPlaysList","setFullPlaysList","plays","updatePlays","isFetching","stopFetching","favourites","editFavourites","url","length","fetch","then","response","ok","json","Error","data","sort","a","b","title","catch","error","console","e","sortedPlays","sortBy","target","textContent","toLowerCase","restorePlays","removeFavourite","id","favouritesCopy","favToDelete","findIndex","f","splice","addFavourite","play","exists","find","push","alert","filter","filters","filterPlaysByDate","before","after","filteredPlays","p","likelyDate","filterPlaysByTitleGenre","titleString","genre","includes","filterTitleGenre","filterByDate"],"mappings":"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","sourcesContent":["import './App.css';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport {useState, useEffect} from \"react\";\r\nimport DefaultView from \"./Components/DefaultView\";\r\nimport {useLocalStorage} from \"./Hooks/useLocalStorage\";\r\nimport * as cloneDeep from \"lodash/cloneDeep\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport HomeView from \"./Components/HomeView\";\r\nimport PlayDetails from \"./Components/PlayDetails\";\r\n\r\n\r\nfunction App() {\r\n\r\n    //local storage logic inspired by https://blog.logrocket.com/using-localstorage-react-hooks/\r\n    const [fullPlaysList, setFullPlaysList] = useLocalStorage(\"plays\", []);\r\n    //fullPlaysList contains the entire list unedited of plays as fetched from the api/local storage, while plays will be\r\n    //altered by filter/sort/restorePlays functions and passed to other components as props\r\n    const [plays, updatePlays] = useState([]);\r\n    const [isFetching, stopFetching] = useState(true);\r\n    const [favourites, editFavourites] = useLocalStorage(\"fav\",[]);\r\n\r\n    useEffect(()=> {\r\n        const url = \"https://www.randyconnolly.com//funwebdev/3rd/api/shakespeare/list.php\"; //url to fetch data\r\n        if (fullPlaysList.length === 0) { //only fetches if local storage doesn't exist\r\n            fetch(url)\r\n                .then(response => {\r\n                    if (response.ok) {\r\n                        return response.json();\r\n                    } else {\r\n                        throw new Error(\"Fetch failed\");\r\n                    }\r\n                })\r\n                .then(data => {\r\n                    //places fetched data in state & local storage\r\n                    setFullPlaysList(data.sort((a, b) => a.title>b.title ? 1 : -1));\r\n                    updatePlays(data.sort((a, b) => a.title>b.title ? 1 : -1));\r\n                    stopFetching(false);\r\n                })\r\n                .catch(error => console.error(error));\r\n        } else {\r\n            updatePlays(fullPlaysList);\r\n            stopFetching(false);\r\n        }\r\n    }, [fullPlaysList, setFullPlaysList])\r\n\r\n    const sort = (e)=> {\r\n        //cloning plays list\r\n        const sortedPlays = cloneDeep(plays);\r\n        let sortBy;\r\n        //if sorting by year, sets sortBy variable to likelyDate\r\n        //otherwise, sortBy variable is set to title\r\n        if(e.target.textContent.toLowerCase() === \"year\")\r\n            sortBy=\"likelyDate\";\r\n        else\r\n            sortBy=e.target.textContent.toLowerCase();\r\n        sortedPlays.sort((a, b) => a[sortBy]>b[sortBy] ? 1 : -1);\r\n        updatePlays(sortedPlays);\r\n    }\r\n\r\n    //uses fullPlaysList state variable to reset plays\r\n    const restorePlays = ()=>{\r\n        updatePlays(fullPlaysList);\r\n    }\r\n    const removeFavourite=(id)=>{\r\n        const favouritesCopy = cloneDeep(favourites);\r\n        const favToDelete=favouritesCopy.findIndex(f=>f.id === id);\r\n        favouritesCopy.splice(favToDelete, 1);\r\n        editFavourites(favouritesCopy);\r\n    }\r\n    const addFavourite=(play)=>{\r\n        const exists = favourites.find(f=>f.id === play.id);\r\n        if (typeof exists === 'undefined')\r\n        {\r\n            const favouritesCopy = cloneDeep(favourites);\r\n            favouritesCopy.push(play);\r\n            editFavourites(favouritesCopy);\r\n        } else\r\n            alert(\"Play already in Favourites list\");\r\n    }\r\n    const filter = filters =>{\r\n        //function to filter list by dates\r\n        const filterPlaysByDate = (before, after, filteredPlays) => {\r\n            //only returns plays whose years are between before and after years when both are specified,\r\n            //or only matches the parameters of one when the other is missing\r\n            return filteredPlays.filter((p)=> (before > p.likelyDate && p.likelyDate > after) ||\r\n                (typeof after === \"undefined\" && p.likelyDate < before) ||\r\n                (typeof before === \"undefined\" && p.likelyDate > after));\r\n        }\r\n        //function to filter by title and/or genre\r\n        const filterPlaysByTitleGenre = (titleString, genre, filteredPlays) =>{\r\n            //only returns plays that match both title and genre when both are specified,\r\n            //or only matches the parameters of one when the other is missing\r\n            return filteredPlays.filter(p=> (p.title.toLowerCase().includes(titleString) && p.genre === genre) ||\r\n                (typeof genre === \"undefined\" && p.title.toLowerCase().includes(titleString)) ||\r\n                (typeof titleString === \"undefined\" && p.genre === genre));\r\n        }\r\n        //initial value of filteredPlays set to fullPlaysList in case user does multiple filter requests in a row without\r\n        //clearing initial filters\r\n        let filteredPlays = cloneDeep(fullPlaysList);\r\n        //only filters by title or genre if at least one is specified\r\n        if (typeof filters.title != \"undefined\" || typeof filters.genre != \"undefined\"){\r\n            const filterTitleGenre = cloneDeep(filteredPlays);\r\n            filteredPlays = filterPlaysByTitleGenre(filters.title.toLowerCase(), filters.genre, filterTitleGenre);\r\n        }\r\n\r\n        //only filters by dates if either before or after year is specified\r\n        if (typeof filters.before != \"undefined\" || typeof filters.after != \"undefined\"){\r\n            const filterByDate = cloneDeep(filteredPlays);\r\n            filteredPlays = filterPlaysByDate(filters.before, filters.after, filterByDate);\r\n        }\r\n\r\n        //sets the list of filtered plays to state\r\n        updatePlays(filteredPlays);\r\n    }\r\n    //while fetching data, displays loading symbol\r\n    if (isFetching && plays.length === 0){\r\n        return <Loader type=\"Circles\" color=\"#00BFFF\" height=\"50vh\" width=\"50vh\"/>\r\n    } else{\r\n        return (\r\n            <div className=\"App\">\r\n\r\n                <Route path=\"/\" exact>\r\n                    <HomeView songs={fullPlaysList} />\r\n                </Route>\r\n                <Route path=\"/HomeView\" exact>\r\n                     <HomeView songs={fullPlaysList} />\r\n                 </Route>\r\n                <Route path='/default' exact>\r\n                    <DefaultView plays={plays} restore={restorePlays} filter={filter} sort={sort} favs={favourites} addFav={addFavourite} removeFav={removeFavourite} />\r\n                </Route>\r\n                <Switch>\r\n                    <Route path='/:play/details'>\r\n                        <PlayDetails addFav={addFavourite}/>\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}